You are given an integer array nums and two integers minK and maxK.

A fixed-bound subarray of nums is a subarray that satisfies the following conditions:

The minimum value in the subarray is equal to minK.
The maximum value in the subarray is equal to maxK.
Return the number of fixed-bound subarrays.

A subarray is a contiguous part of an array.

 

Example 1:

Input: nums = [1,3,5,2,7,5], minK = 1, maxK = 5
Output: 2
Explanation: The fixed-bound subarrays are [1,3,5] and [1,3,5,2].
Example 2:

Input: nums = [1,1,1,1], minK = 1, maxK = 1
Output: 10
Explanation: Every subarray of nums is a fixed-bound subarray. There are 10 possible subarrays.
 

Constraints:

2 <= nums.length <= 105
1 <= nums[i], minK, maxK <= 106




The main logic is in the calculation of total+= max(0,(min(max_i,min_i) - bad_i))

Here if we do not see either a min_i or a max_i then the value of min (max_i,min_i) will always ne -1. And subtracting either
with the initalized value of bad_i as -1 or any other value the result will be negative and hence the total
will not be affected

Once we seen both then we take the earliest one we have seen to include both min and max in our array and check
where the latest we have seen bad_i as this cannot be included in our subarrays. 